// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package entity

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson163c17a9DecodeHarmonicaInternalEntity(in *jlexer.Lexer, out *WSSubscriptionNotificationPayload) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserId = UserID(in.Uint64())
		case "triggered_by_user":
			(out.TriggeredByUser).UnmarshalEasyJSON(in)
		case "created_at":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.CreatedAt).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity(out *jwriter.Writer, in WSSubscriptionNotificationPayload) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.UserId))
	}
	{
		const prefix string = ",\"triggered_by_user\":"
		out.RawString(prefix)
		(in.TriggeredByUser).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.Raw((in.CreatedAt).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v WSSubscriptionNotificationPayload) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WSSubscriptionNotificationPayload) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WSSubscriptionNotificationPayload) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WSSubscriptionNotificationPayload) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity1(in *jlexer.Lexer, out *WSNewPinNotificationPayload) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserId = UserID(in.Uint64())
		case "triggered_by_user":
			(out.TriggeredByUser).UnmarshalEasyJSON(in)
		case "pin":
			(out.Pin).UnmarshalEasyJSON(in)
		case "created_at":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.CreatedAt).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity1(out *jwriter.Writer, in WSNewPinNotificationPayload) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.UserId))
	}
	{
		const prefix string = ",\"triggered_by_user\":"
		out.RawString(prefix)
		(in.TriggeredByUser).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"pin\":"
		out.RawString(prefix)
		(in.Pin).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.Raw((in.CreatedAt).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v WSNewPinNotificationPayload) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WSNewPinNotificationPayload) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WSNewPinNotificationPayload) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WSNewPinNotificationPayload) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity1(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity2(in *jlexer.Lexer, out *WSMessageToSend) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "action":
			out.Action = WSAction(in.String())
		case "payload":
			if m, ok := out.Payload.(easyjson.Unmarshaler); ok {
				m.UnmarshalEasyJSON(in)
			} else if m, ok := out.Payload.(json.Unmarshaler); ok {
				_ = m.UnmarshalJSON(in.Raw())
			} else {
				out.Payload = in.Interface()
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity2(out *jwriter.Writer, in WSMessageToSend) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"action\":"
		out.RawString(prefix[1:])
		out.String(string(in.Action))
	}
	{
		const prefix string = ",\"payload\":"
		out.RawString(prefix)
		if m, ok := in.Payload.(easyjson.Marshaler); ok {
			m.MarshalEasyJSON(out)
		} else if m, ok := in.Payload.(json.Marshaler); ok {
			out.Raw(m.MarshalJSON())
		} else {
			out.Raw(json.Marshal(in.Payload))
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v WSMessageToSend) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WSMessageToSend) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WSMessageToSend) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WSMessageToSend) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity2(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity3(in *jlexer.Lexer, out *WSMessagePayload) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserId = UserID(in.Uint64())
		case "triggered_by_user":
			(out.TriggeredByUser).UnmarshalEasyJSON(in)
		case "pin":
			(out.Pin).UnmarshalEasyJSON(in)
		case "comment":
			(out.Comment).UnmarshalEasyJSON(in)
		case "message":
			(out.Message).UnmarshalEasyJSON(in)
		case "created_at":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.CreatedAt).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity3(out *jwriter.Writer, in WSMessagePayload) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.UserId))
	}
	{
		const prefix string = ",\"triggered_by_user\":"
		out.RawString(prefix)
		(in.TriggeredByUser).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"pin\":"
		out.RawString(prefix)
		(in.Pin).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"comment\":"
		out.RawString(prefix)
		(in.Comment).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		(in.Message).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.Raw((in.CreatedAt).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v WSMessagePayload) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WSMessagePayload) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WSMessagePayload) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WSMessagePayload) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity3(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity4(in *jlexer.Lexer, out *WSMessage) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "action":
			out.Action = WSAction(in.String())
		case "payload":
			(out.Payload).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity4(out *jwriter.Writer, in WSMessage) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"action\":"
		out.RawString(prefix[1:])
		out.String(string(in.Action))
	}
	{
		const prefix string = ",\"payload\":"
		out.RawString(prefix)
		(in.Payload).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v WSMessage) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WSMessage) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WSMessage) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WSMessage) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity4(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity5(in *jlexer.Lexer, out *WSCommentNotificationPayload) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserId = UserID(in.Uint64())
		case "triggered_by_user":
			(out.TriggeredByUser).UnmarshalEasyJSON(in)
		case "comment":
			(out.Comment).UnmarshalEasyJSON(in)
		case "pin":
			(out.Pin).UnmarshalEasyJSON(in)
		case "created_at":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.CreatedAt).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity5(out *jwriter.Writer, in WSCommentNotificationPayload) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.UserId))
	}
	{
		const prefix string = ",\"triggered_by_user\":"
		out.RawString(prefix)
		(in.TriggeredByUser).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"comment\":"
		out.RawString(prefix)
		(in.Comment).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"pin\":"
		out.RawString(prefix)
		(in.Pin).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.Raw((in.CreatedAt).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v WSCommentNotificationPayload) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WSCommentNotificationPayload) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WSCommentNotificationPayload) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WSCommentNotificationPayload) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity5(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity6(in *jlexer.Lexer, out *WSChatMessagePayload) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "text":
			out.Text = string(in.String())
		case "sender_id":
			out.SenderId = UserID(in.Uint64())
		case "receiver_id":
			out.ReceiverId = UserID(in.Uint64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity6(out *jwriter.Writer, in WSChatMessagePayload) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix[1:])
		out.String(string(in.Text))
	}
	{
		const prefix string = ",\"sender_id\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.SenderId))
	}
	{
		const prefix string = ",\"receiver_id\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.ReceiverId))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v WSChatMessagePayload) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v WSChatMessagePayload) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *WSChatMessagePayload) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *WSChatMessagePayload) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity6(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity7(in *jlexer.Lexer, out *UserSubscriptions) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "subscriptions":
			if in.IsNull() {
				in.Skip()
				out.Subscriptions = nil
			} else {
				in.Delim('[')
				if out.Subscriptions == nil {
					if !in.IsDelim(']') {
						out.Subscriptions = make([]UserSubscriptionInfo, 0, 1)
					} else {
						out.Subscriptions = []UserSubscriptionInfo{}
					}
				} else {
					out.Subscriptions = (out.Subscriptions)[:0]
				}
				for !in.IsDelim(']') {
					var v1 UserSubscriptionInfo
					(v1).UnmarshalEasyJSON(in)
					out.Subscriptions = append(out.Subscriptions, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity7(out *jwriter.Writer, in UserSubscriptions) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"subscriptions\":"
		out.RawString(prefix[1:])
		if in.Subscriptions == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v2, v3 := range in.Subscriptions {
				if v2 > 0 {
					out.RawByte(',')
				}
				(v3).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserSubscriptions) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserSubscriptions) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserSubscriptions) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserSubscriptions) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity7(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity8(in *jlexer.Lexer, out *UserSubscriptionInfo) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserId = UserID(in.Uint64())
		case "nickname":
			out.Nickname = string(in.String())
		case "avatar_url":
			out.AvatarURL = string(in.String())
		case "subscribers_count":
			out.SubscribersCount = uint64(in.Uint64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity8(out *jwriter.Writer, in UserSubscriptionInfo) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.UserId))
	}
	{
		const prefix string = ",\"nickname\":"
		out.RawString(prefix)
		out.String(string(in.Nickname))
	}
	{
		const prefix string = ",\"avatar_url\":"
		out.RawString(prefix)
		out.String(string(in.AvatarURL))
	}
	{
		const prefix string = ",\"subscribers_count\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.SubscribersCount))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserSubscriptionInfo) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserSubscriptionInfo) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserSubscriptionInfo) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserSubscriptionInfo) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity8(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity9(in *jlexer.Lexer, out *UserSubscribers) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "subscribers":
			if in.IsNull() {
				in.Skip()
				out.Subscribers = nil
			} else {
				in.Delim('[')
				if out.Subscribers == nil {
					if !in.IsDelim(']') {
						out.Subscribers = make([]UserSubscriptionInfo, 0, 1)
					} else {
						out.Subscribers = []UserSubscriptionInfo{}
					}
				} else {
					out.Subscribers = (out.Subscribers)[:0]
				}
				for !in.IsDelim(']') {
					var v4 UserSubscriptionInfo
					(v4).UnmarshalEasyJSON(in)
					out.Subscribers = append(out.Subscribers, v4)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity9(out *jwriter.Writer, in UserSubscribers) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"subscribers\":"
		out.RawString(prefix[1:])
		if in.Subscribers == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v5, v6 := range in.Subscribers {
				if v5 > 0 {
					out.RawByte(',')
				}
				(v6).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserSubscribers) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserSubscribers) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserSubscribers) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserSubscribers) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity9(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity10(in *jlexer.Lexer, out *UserResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserId = UserID(in.Uint64())
		case "email":
			out.Email = string(in.String())
		case "nickname":
			out.Nickname = string(in.String())
		case "avatar_url":
			out.AvatarURL = string(in.String())
		case "avatar_width":
			out.AvatarDX = int64(in.Int64())
		case "avatar_height":
			out.AvatarDY = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity10(out *jwriter.Writer, in UserResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.UserId))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"nickname\":"
		out.RawString(prefix)
		out.String(string(in.Nickname))
	}
	{
		const prefix string = ",\"avatar_url\":"
		out.RawString(prefix)
		out.String(string(in.AvatarURL))
	}
	{
		const prefix string = ",\"avatar_width\":"
		out.RawString(prefix)
		out.Int64(int64(in.AvatarDX))
	}
	{
		const prefix string = ",\"avatar_height\":"
		out.RawString(prefix)
		out.Int64(int64(in.AvatarDY))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity10(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity11(in *jlexer.Lexer, out *UserProfileResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user":
			(out.User).UnmarshalEasyJSON(in)
		case "subscriptions_count":
			out.SubscriptionsCount = uint64(in.Uint64())
		case "subscribers_count":
			out.SubscribersCount = uint64(in.Uint64())
		case "is_subscribed":
			out.IsSubscribed = bool(in.Bool())
		case "is_owner":
			out.IsOwner = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity11(out *jwriter.Writer, in UserProfileResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix[1:])
		(in.User).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"subscriptions_count\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.SubscriptionsCount))
	}
	{
		const prefix string = ",\"subscribers_count\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.SubscribersCount))
	}
	{
		const prefix string = ",\"is_subscribed\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsSubscribed))
	}
	{
		const prefix string = ",\"is_owner\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsOwner))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserProfileResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity11(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserProfileResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity11(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserProfileResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity11(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserProfileResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity11(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity12(in *jlexer.Lexer, out *UserPins) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "pins":
			if in.IsNull() {
				in.Skip()
				out.Pins = nil
			} else {
				in.Delim('[')
				if out.Pins == nil {
					if !in.IsDelim(']') {
						out.Pins = make([]UserPinResponse, 0, 1)
					} else {
						out.Pins = []UserPinResponse{}
					}
				} else {
					out.Pins = (out.Pins)[:0]
				}
				for !in.IsDelim(']') {
					var v7 UserPinResponse
					(v7).UnmarshalEasyJSON(in)
					out.Pins = append(out.Pins, v7)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity12(out *jwriter.Writer, in UserPins) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"pins\":"
		out.RawString(prefix[1:])
		if in.Pins == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v8, v9 := range in.Pins {
				if v8 > 0 {
					out.RawByte(',')
				}
				(v9).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserPins) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity12(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserPins) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity12(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserPins) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity12(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserPins) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity12(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity13(in *jlexer.Lexer, out *UserPinResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "pin_id":
			out.PinId = PinID(in.Uint64())
		case "content_url":
			out.ContentUrl = string(in.String())
		case "content_width":
			out.ContentDX = int64(in.Int64())
		case "content_height":
			out.ContentDY = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity13(out *jwriter.Writer, in UserPinResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"pin_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.PinId))
	}
	{
		const prefix string = ",\"content_url\":"
		out.RawString(prefix)
		out.String(string(in.ContentUrl))
	}
	{
		const prefix string = ",\"content_width\":"
		out.RawString(prefix)
		out.Int64(int64(in.ContentDX))
	}
	{
		const prefix string = ",\"content_height\":"
		out.RawString(prefix)
		out.Int64(int64(in.ContentDY))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserPinResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity13(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserPinResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity13(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserPinResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity13(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserPinResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity13(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity14(in *jlexer.Lexer, out *UserList) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "users":
			if in.IsNull() {
				in.Skip()
				out.Users = nil
			} else {
				in.Delim('[')
				if out.Users == nil {
					if !in.IsDelim(']') {
						out.Users = make([]UserResponse, 0, 0)
					} else {
						out.Users = []UserResponse{}
					}
				} else {
					out.Users = (out.Users)[:0]
				}
				for !in.IsDelim(']') {
					var v10 UserResponse
					(v10).UnmarshalEasyJSON(in)
					out.Users = append(out.Users, v10)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity14(out *jwriter.Writer, in UserList) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"users\":"
		out.RawString(prefix[1:])
		if in.Users == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v11, v12 := range in.Users {
				if v11 > 0 {
					out.RawByte(',')
				}
				(v12).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserList) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity14(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserList) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity14(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserList) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity14(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserList) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity14(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity15(in *jlexer.Lexer, out *UserFromChat) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserID = UserID(in.Uint64())
		case "nickname":
			out.Nickname = string(in.String())
		case "avatar_url":
			out.AvatarURL = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity15(out *jwriter.Writer, in UserFromChat) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.UserID))
	}
	{
		const prefix string = ",\"nickname\":"
		out.RawString(prefix)
		out.String(string(in.Nickname))
	}
	{
		const prefix string = ",\"avatar_url\":"
		out.RawString(prefix)
		out.String(string(in.AvatarURL))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserFromChat) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity15(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserFromChat) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity15(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserFromChat) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity15(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserFromChat) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity15(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity16(in *jlexer.Lexer, out *UserChats) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "chats":
			if in.IsNull() {
				in.Skip()
				out.Chats = nil
			} else {
				in.Delim('[')
				if out.Chats == nil {
					if !in.IsDelim(']') {
						out.Chats = make([]UserChat, 0, 0)
					} else {
						out.Chats = []UserChat{}
					}
				} else {
					out.Chats = (out.Chats)[:0]
				}
				for !in.IsDelim(']') {
					var v13 UserChat
					(v13).UnmarshalEasyJSON(in)
					out.Chats = append(out.Chats, v13)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity16(out *jwriter.Writer, in UserChats) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"chats\":"
		out.RawString(prefix[1:])
		if in.Chats == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v14, v15 := range in.Chats {
				if v14 > 0 {
					out.RawByte(',')
				}
				(v15).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserChats) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity16(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserChats) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity16(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserChats) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity16(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserChats) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity16(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity17(in *jlexer.Lexer, out *UserChat) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user":
			(out.User).UnmarshalEasyJSON(in)
		case "chat_last_message":
			(out.LastMessage).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity17(out *jwriter.Writer, in UserChat) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix[1:])
		(in.User).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"chat_last_message\":"
		out.RawString(prefix)
		(in.LastMessage).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserChat) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity17(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserChat) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity17(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserChat) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity17(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserChat) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity17(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity18(in *jlexer.Lexer, out *UserBoardsWithoutPin) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "boards":
			if in.IsNull() {
				in.Skip()
				out.Boards = nil
			} else {
				in.Delim('[')
				if out.Boards == nil {
					if !in.IsDelim(']') {
						out.Boards = make([]UserBoardWithoutPin, 0, 0)
					} else {
						out.Boards = []UserBoardWithoutPin{}
					}
				} else {
					out.Boards = (out.Boards)[:0]
				}
				for !in.IsDelim(']') {
					var v16 UserBoardWithoutPin
					(v16).UnmarshalEasyJSON(in)
					out.Boards = append(out.Boards, v16)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity18(out *jwriter.Writer, in UserBoardsWithoutPin) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"boards\":"
		out.RawString(prefix[1:])
		if in.Boards == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v17, v18 := range in.Boards {
				if v17 > 0 {
					out.RawByte(',')
				}
				(v18).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserBoardsWithoutPin) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity18(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserBoardsWithoutPin) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity18(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserBoardsWithoutPin) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity18(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserBoardsWithoutPin) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity18(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity19(in *jlexer.Lexer, out *UserBoards) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "boards":
			if in.IsNull() {
				in.Skip()
				out.Boards = nil
			} else {
				in.Delim('[')
				if out.Boards == nil {
					if !in.IsDelim(']') {
						out.Boards = make([]UserBoard, 0, 0)
					} else {
						out.Boards = []UserBoard{}
					}
				} else {
					out.Boards = (out.Boards)[:0]
				}
				for !in.IsDelim(']') {
					var v19 UserBoard
					(v19).UnmarshalEasyJSON(in)
					out.Boards = append(out.Boards, v19)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity19(out *jwriter.Writer, in UserBoards) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"boards\":"
		out.RawString(prefix[1:])
		if in.Boards == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v20, v21 := range in.Boards {
				if v20 > 0 {
					out.RawByte(',')
				}
				(v21).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserBoards) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity19(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserBoards) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity19(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserBoards) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity19(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserBoards) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity19(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity20(in *jlexer.Lexer, out *UserBoardWithoutPin) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "board_id":
			out.BoardID = BoardID(in.Uint64())
		case "title":
			out.Title = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "cover_url":
			out.CoverURL = string(in.String())
		case "visibility_type":
			out.VisibilityType = VisibilityType(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity20(out *jwriter.Writer, in UserBoardWithoutPin) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"board_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.BoardID))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"cover_url\":"
		out.RawString(prefix)
		out.String(string(in.CoverURL))
	}
	{
		const prefix string = ",\"visibility_type\":"
		out.RawString(prefix)
		out.String(string(in.VisibilityType))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserBoardWithoutPin) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity20(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserBoardWithoutPin) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity20(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserBoardWithoutPin) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity20(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserBoardWithoutPin) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity20(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity21(in *jlexer.Lexer, out *UserBoard) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "board_id":
			out.BoardID = BoardID(in.Uint64())
		case "title":
			out.Title = string(in.String())
		case "created_at":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.CreatedAt).UnmarshalJSON(data))
			}
		case "description":
			out.Description = string(in.String())
		case "cover_url":
			out.CoverURL = string(in.String())
		case "visibility_type":
			out.VisibilityType = VisibilityType(in.String())
		case "recent_pins":
			if in.IsNull() {
				in.Skip()
				out.RecentPinContentUrls = nil
			} else {
				in.Delim('[')
				if out.RecentPinContentUrls == nil {
					if !in.IsDelim(']') {
						out.RecentPinContentUrls = make([]string, 0, 4)
					} else {
						out.RecentPinContentUrls = []string{}
					}
				} else {
					out.RecentPinContentUrls = (out.RecentPinContentUrls)[:0]
				}
				for !in.IsDelim(']') {
					var v22 string
					v22 = string(in.String())
					out.RecentPinContentUrls = append(out.RecentPinContentUrls, v22)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity21(out *jwriter.Writer, in UserBoard) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"board_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.BoardID))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.Raw((in.CreatedAt).MarshalJSON())
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"cover_url\":"
		out.RawString(prefix)
		out.String(string(in.CoverURL))
	}
	{
		const prefix string = ",\"visibility_type\":"
		out.RawString(prefix)
		out.String(string(in.VisibilityType))
	}
	{
		const prefix string = ",\"recent_pins\":"
		out.RawString(prefix)
		if in.RecentPinContentUrls == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v23, v24 := range in.RecentPinContentUrls {
				if v23 > 0 {
					out.RawByte(',')
				}
				out.String(string(v24))
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UserBoard) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity21(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UserBoard) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity21(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UserBoard) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity21(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UserBoard) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity21(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity22(in *jlexer.Lexer, out *User) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserID = UserID(in.Uint64())
		case "email":
			out.Email = string(in.String())
		case "nickname":
			out.Nickname = string(in.String())
		case "password":
			out.Password = string(in.String())
		case "avatar_url":
			out.AvatarURL = string(in.String())
		case "avatar_width":
			out.AvatarDX = int64(in.Int64())
		case "avatar_height":
			out.AvatarDY = int64(in.Int64())
		case "register_at":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.RegisterAt).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity22(out *jwriter.Writer, in User) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.UserID))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"nickname\":"
		out.RawString(prefix)
		out.String(string(in.Nickname))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	{
		const prefix string = ",\"avatar_url\":"
		out.RawString(prefix)
		out.String(string(in.AvatarURL))
	}
	{
		const prefix string = ",\"avatar_width\":"
		out.RawString(prefix)
		out.Int64(int64(in.AvatarDX))
	}
	{
		const prefix string = ",\"avatar_height\":"
		out.RawString(prefix)
		out.Int64(int64(in.AvatarDY))
	}
	{
		const prefix string = ",\"register_at\":"
		out.RawString(prefix)
		out.Raw((in.RegisterAt).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v User) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity22(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v User) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity22(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *User) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity22(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *User) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity22(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity23(in *jlexer.Lexer, out *TriggeredByUser) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserId = UserID(in.Uint64())
		case "nickname":
			out.Nickname = string(in.String())
		case "avatar_url":
			out.AvatarURL = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity23(out *jwriter.Writer, in TriggeredByUser) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.UserId))
	}
	{
		const prefix string = ",\"nickname\":"
		out.RawString(prefix)
		out.String(string(in.Nickname))
	}
	{
		const prefix string = ",\"avatar_url\":"
		out.RawString(prefix)
		out.String(string(in.AvatarURL))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TriggeredByUser) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity23(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TriggeredByUser) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity23(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TriggeredByUser) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity23(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TriggeredByUser) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity23(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity24(in *jlexer.Lexer, out *SearchUsers) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "users":
			if in.IsNull() {
				in.Skip()
				out.Users = nil
			} else {
				in.Delim('[')
				if out.Users == nil {
					if !in.IsDelim(']') {
						out.Users = make([]SearchUser, 0, 1)
					} else {
						out.Users = []SearchUser{}
					}
				} else {
					out.Users = (out.Users)[:0]
				}
				for !in.IsDelim(']') {
					var v25 SearchUser
					(v25).UnmarshalEasyJSON(in)
					out.Users = append(out.Users, v25)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity24(out *jwriter.Writer, in SearchUsers) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"users\":"
		out.RawString(prefix[1:])
		if in.Users == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v26, v27 := range in.Users {
				if v26 > 0 {
					out.RawByte(',')
				}
				(v27).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SearchUsers) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity24(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SearchUsers) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity24(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SearchUsers) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity24(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SearchUsers) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity24(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity25(in *jlexer.Lexer, out *SearchUser) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserId = UserID(in.Uint64())
		case "nickname":
			out.Nickname = string(in.String())
		case "avatar_url":
			out.AvatarURL = string(in.String())
		case "subscribers_count":
			out.SubsCount = int(in.Int())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity25(out *jwriter.Writer, in SearchUser) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.UserId))
	}
	{
		const prefix string = ",\"nickname\":"
		out.RawString(prefix)
		out.String(string(in.Nickname))
	}
	{
		const prefix string = ",\"avatar_url\":"
		out.RawString(prefix)
		out.String(string(in.AvatarURL))
	}
	{
		const prefix string = ",\"subscribers_count\":"
		out.RawString(prefix)
		out.Int(int(in.SubsCount))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SearchUser) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity25(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SearchUser) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity25(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SearchUser) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity25(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SearchUser) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity25(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity26(in *jlexer.Lexer, out *SearchResult) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "users":
			if in.IsNull() {
				in.Skip()
				out.Users = nil
			} else {
				in.Delim('[')
				if out.Users == nil {
					if !in.IsDelim(']') {
						out.Users = make([]SearchUser, 0, 1)
					} else {
						out.Users = []SearchUser{}
					}
				} else {
					out.Users = (out.Users)[:0]
				}
				for !in.IsDelim(']') {
					var v28 SearchUser
					(v28).UnmarshalEasyJSON(in)
					out.Users = append(out.Users, v28)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "pins":
			if in.IsNull() {
				in.Skip()
				out.Pins = nil
			} else {
				in.Delim('[')
				if out.Pins == nil {
					if !in.IsDelim(']') {
						out.Pins = make([]SearchPin, 0, 1)
					} else {
						out.Pins = []SearchPin{}
					}
				} else {
					out.Pins = (out.Pins)[:0]
				}
				for !in.IsDelim(']') {
					var v29 SearchPin
					(v29).UnmarshalEasyJSON(in)
					out.Pins = append(out.Pins, v29)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "boards":
			if in.IsNull() {
				in.Skip()
				out.Boards = nil
			} else {
				in.Delim('[')
				if out.Boards == nil {
					if !in.IsDelim(']') {
						out.Boards = make([]SearchBoard, 0, 1)
					} else {
						out.Boards = []SearchBoard{}
					}
				} else {
					out.Boards = (out.Boards)[:0]
				}
				for !in.IsDelim(']') {
					var v30 SearchBoard
					(v30).UnmarshalEasyJSON(in)
					out.Boards = append(out.Boards, v30)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity26(out *jwriter.Writer, in SearchResult) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"users\":"
		out.RawString(prefix[1:])
		if in.Users == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v31, v32 := range in.Users {
				if v31 > 0 {
					out.RawByte(',')
				}
				(v32).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"pins\":"
		out.RawString(prefix)
		if in.Pins == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v33, v34 := range in.Pins {
				if v33 > 0 {
					out.RawByte(',')
				}
				(v34).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"boards\":"
		out.RawString(prefix)
		if in.Boards == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v35, v36 := range in.Boards {
				if v35 > 0 {
					out.RawByte(',')
				}
				(v36).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SearchResult) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity26(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SearchResult) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity26(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SearchResult) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity26(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SearchResult) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity26(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity27(in *jlexer.Lexer, out *SearchRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "search_query":
			out.SearchQuery = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity27(out *jwriter.Writer, in SearchRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"search_query\":"
		out.RawString(prefix[1:])
		out.String(string(in.SearchQuery))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SearchRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity27(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SearchRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity27(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SearchRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity27(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SearchRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity27(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity28(in *jlexer.Lexer, out *SearchPin) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "pin_id":
			out.PinId = PinID(in.Uint64())
		case "title":
			out.Title = string(in.String())
		case "content_url":
			out.ContentURL = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity28(out *jwriter.Writer, in SearchPin) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"pin_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.PinId))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"content_url\":"
		out.RawString(prefix)
		out.String(string(in.ContentURL))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SearchPin) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity28(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SearchPin) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity28(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SearchPin) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity28(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SearchPin) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity28(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity29(in *jlexer.Lexer, out *SearchBoard) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "board_id":
			out.BoardId = BoardID(in.Uint64())
		case "title":
			out.Title = string(in.String())
		case "cover_url":
			out.CoverURL = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity29(out *jwriter.Writer, in SearchBoard) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"board_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.BoardId))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"cover_url\":"
		out.RawString(prefix)
		out.String(string(in.CoverURL))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SearchBoard) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity29(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SearchBoard) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity29(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SearchBoard) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity29(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SearchBoard) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity29(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity30(in *jlexer.Lexer, out *PinPageResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "pin_id":
			out.PinId = PinID(in.Uint64())
		case "created_at":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.CreatedAt).UnmarshalJSON(data))
			}
		case "title":
			out.Title = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "allow_comments":
			out.AllowComments = bool(in.Bool())
		case "click_url":
			out.ClickUrl = string(in.String())
		case "content_url":
			out.ContentUrl = string(in.String())
		case "content_width":
			out.ContentDX = int64(in.Int64())
		case "content_height":
			out.ContentDY = int64(in.Int64())
		case "likes_count":
			out.LikesCount = uint64(in.Uint64())
		case "is_owner":
			out.IsOwner = bool(in.Bool())
		case "is_liked":
			out.IsLiked = bool(in.Bool())
		case "author":
			(out.PinAuthor).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity30(out *jwriter.Writer, in PinPageResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"pin_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.PinId))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.Raw((in.CreatedAt).MarshalJSON())
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"allow_comments\":"
		out.RawString(prefix)
		out.Bool(bool(in.AllowComments))
	}
	{
		const prefix string = ",\"click_url\":"
		out.RawString(prefix)
		out.String(string(in.ClickUrl))
	}
	{
		const prefix string = ",\"content_url\":"
		out.RawString(prefix)
		out.String(string(in.ContentUrl))
	}
	{
		const prefix string = ",\"content_width\":"
		out.RawString(prefix)
		out.Int64(int64(in.ContentDX))
	}
	{
		const prefix string = ",\"content_height\":"
		out.RawString(prefix)
		out.Int64(int64(in.ContentDY))
	}
	{
		const prefix string = ",\"likes_count\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.LikesCount))
	}
	{
		const prefix string = ",\"is_owner\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsOwner))
	}
	{
		const prefix string = ",\"is_liked\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsLiked))
	}
	{
		const prefix string = ",\"author\":"
		out.RawString(prefix)
		(in.PinAuthor).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PinPageResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity30(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PinPageResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity30(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PinPageResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity30(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PinPageResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity30(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity31(in *jlexer.Lexer, out *PinNotificationResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "pin_id":
			out.PinId = PinID(in.Uint64())
		case "content_url":
			out.ContentUrl = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity31(out *jwriter.Writer, in PinNotificationResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"pin_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.PinId))
	}
	{
		const prefix string = ",\"content_url\":"
		out.RawString(prefix)
		out.String(string(in.ContentUrl))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PinNotificationResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity31(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PinNotificationResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity31(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PinNotificationResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity31(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PinNotificationResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity31(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity32(in *jlexer.Lexer, out *PinAuthor) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserId = UserID(in.Uint64())
		case "nickname":
			out.Nickname = string(in.String())
		case "avatar_url":
			out.AvatarURL = string(in.String())
		case "avatar_width":
			out.AvatarDX = int64(in.Int64())
		case "avatar_height":
			out.AvatarDY = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity32(out *jwriter.Writer, in PinAuthor) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.UserId))
	}
	{
		const prefix string = ",\"nickname\":"
		out.RawString(prefix)
		out.String(string(in.Nickname))
	}
	{
		const prefix string = ",\"avatar_url\":"
		out.RawString(prefix)
		out.String(string(in.AvatarURL))
	}
	{
		const prefix string = ",\"avatar_width\":"
		out.RawString(prefix)
		out.Int64(int64(in.AvatarDX))
	}
	{
		const prefix string = ",\"avatar_height\":"
		out.RawString(prefix)
		out.Int64(int64(in.AvatarDY))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v PinAuthor) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity32(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v PinAuthor) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity32(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *PinAuthor) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity32(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *PinAuthor) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity32(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity33(in *jlexer.Lexer, out *Pin) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "pin_id":
			out.PinId = PinID(in.Uint64())
		case "author_id":
			out.AuthorId = UserID(in.Uint64())
		case "created_at":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.CreatedAt).UnmarshalJSON(data))
			}
		case "title":
			out.Title = string(in.String())
		case "description":
			out.Description = string(in.String())
		case "allow_comments":
			out.AllowComments = bool(in.Bool())
		case "click_url":
			out.ClickUrl = string(in.String())
		case "content_url":
			out.ContentUrl = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity33(out *jwriter.Writer, in Pin) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"pin_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.PinId))
	}
	{
		const prefix string = ",\"author_id\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.AuthorId))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.Raw((in.CreatedAt).MarshalJSON())
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"allow_comments\":"
		out.RawString(prefix)
		out.Bool(bool(in.AllowComments))
	}
	{
		const prefix string = ",\"click_url\":"
		out.RawString(prefix)
		out.String(string(in.ClickUrl))
	}
	{
		const prefix string = ",\"content_url\":"
		out.RawString(prefix)
		out.String(string(in.ContentUrl))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Pin) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity33(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Pin) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity33(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Pin) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity33(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Pin) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity33(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity34(in *jlexer.Lexer, out *Notifications) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "notifications":
			if in.IsNull() {
				in.Skip()
				out.Notifications = nil
			} else {
				in.Delim('[')
				if out.Notifications == nil {
					if !in.IsDelim(']') {
						out.Notifications = make([]NotificationResponse, 0, 0)
					} else {
						out.Notifications = []NotificationResponse{}
					}
				} else {
					out.Notifications = (out.Notifications)[:0]
				}
				for !in.IsDelim(']') {
					var v37 NotificationResponse
					(v37).UnmarshalEasyJSON(in)
					out.Notifications = append(out.Notifications, v37)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity34(out *jwriter.Writer, in Notifications) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"notifications\":"
		out.RawString(prefix[1:])
		if in.Notifications == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v38, v39 := range in.Notifications {
				if v38 > 0 {
					out.RawByte(',')
				}
				(v39).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Notifications) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity34(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Notifications) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity34(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Notifications) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity34(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Notifications) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity34(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity35(in *jlexer.Lexer, out *NotificationResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "notification_id":
			out.NotificationId = int64(in.Int64())
		case "user_id":
			out.UserId = UserID(in.Uint64())
		case "type":
			out.Type = NotificationType(in.String())
		case "triggered_by_user":
			(out.TriggeredByUser).UnmarshalEasyJSON(in)
		case "pin":
			(out.Pin).UnmarshalEasyJSON(in)
		case "comment":
			(out.Comment).UnmarshalEasyJSON(in)
		case "message":
			(out.Message).UnmarshalEasyJSON(in)
		case "created_at":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.CreatedAt).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity35(out *jwriter.Writer, in NotificationResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"notification_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.NotificationId))
	}
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.UserId))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"triggered_by_user\":"
		out.RawString(prefix)
		(in.TriggeredByUser).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"pin\":"
		out.RawString(prefix)
		(in.Pin).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"comment\":"
		out.RawString(prefix)
		(in.Comment).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"message\":"
		out.RawString(prefix)
		(in.Message).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.Raw((in.CreatedAt).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v NotificationResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity35(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v NotificationResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity35(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *NotificationResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity35(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *NotificationResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity35(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity36(in *jlexer.Lexer, out *Notification) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "notification_id":
			out.NotificationId = int64(in.Int64())
		case "user_id":
			out.UserId = UserID(in.Uint64())
		case "type":
			out.Type = NotificationType(in.String())
		case "triggered_by_user_id":
			out.TriggeredByUserId = UserID(in.Uint64())
		case "pin_id":
			out.PinId = PinID(in.Uint64())
		case "comment_id":
			out.CommentId = CommentID(in.Uint64())
		case "message_id":
			out.MessageId = int64(in.Int64())
		case "created_at":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.CreatedAt).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity36(out *jwriter.Writer, in Notification) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"notification_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.NotificationId))
	}
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.UserId))
	}
	{
		const prefix string = ",\"type\":"
		out.RawString(prefix)
		out.String(string(in.Type))
	}
	{
		const prefix string = ",\"triggered_by_user_id\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.TriggeredByUserId))
	}
	{
		const prefix string = ",\"pin_id\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.PinId))
	}
	{
		const prefix string = ",\"comment_id\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.CommentId))
	}
	{
		const prefix string = ",\"message_id\":"
		out.RawString(prefix)
		out.Int64(int64(in.MessageId))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.Raw((in.CreatedAt).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Notification) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity36(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Notification) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity36(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Notification) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity36(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Notification) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity36(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity37(in *jlexer.Lexer, out *Messages) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user":
			(out.User).UnmarshalEasyJSON(in)
		case "draft":
			(out.Draft).UnmarshalEasyJSON(in)
		case "messages":
			if in.IsNull() {
				in.Skip()
				out.Messages = nil
			} else {
				in.Delim('[')
				if out.Messages == nil {
					if !in.IsDelim(']') {
						out.Messages = make([]MessageResponse, 0, 1)
					} else {
						out.Messages = []MessageResponse{}
					}
				} else {
					out.Messages = (out.Messages)[:0]
				}
				for !in.IsDelim(']') {
					var v40 MessageResponse
					(v40).UnmarshalEasyJSON(in)
					out.Messages = append(out.Messages, v40)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity37(out *jwriter.Writer, in Messages) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix[1:])
		(in.User).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"draft\":"
		out.RawString(prefix)
		(in.Draft).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"messages\":"
		out.RawString(prefix)
		if in.Messages == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v41, v42 := range in.Messages {
				if v41 > 0 {
					out.RawByte(',')
				}
				(v42).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Messages) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity37(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Messages) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity37(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Messages) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity37(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Messages) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity37(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity38(in *jlexer.Lexer, out *MessageResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "sender_id":
			out.SenderId = UserID(in.Uint64())
		case "text":
			out.Text = string(in.String())
		case "message_read":
			out.IsRead = bool(in.Bool())
		case "sent_at":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.SentAt).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity38(out *jwriter.Writer, in MessageResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"sender_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.SenderId))
	}
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix)
		out.String(string(in.Text))
	}
	{
		const prefix string = ",\"message_read\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsRead))
	}
	{
		const prefix string = ",\"sent_at\":"
		out.RawString(prefix)
		out.Raw((in.SentAt).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v MessageResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity38(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v MessageResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity38(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *MessageResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity38(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *MessageResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity38(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity39(in *jlexer.Lexer, out *MessageNotificationResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "text":
			out.Text = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity39(out *jwriter.Writer, in MessageNotificationResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix[1:])
		out.String(string(in.Text))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v MessageNotificationResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity39(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v MessageNotificationResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity39(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *MessageNotificationResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity39(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *MessageNotificationResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity39(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity40(in *jlexer.Lexer, out *Message) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "message_id":
			out.MessageId = int64(in.Int64())
		case "sender_id":
			out.SenderId = UserID(in.Uint64())
		case "receiver_id":
			out.ReceiverId = UserID(in.Uint64())
		case "text":
			out.Text = string(in.String())
		case "status":
			out.Status = MessageStatus(in.String())
		case "sent_at":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.SentAt).UnmarshalJSON(data))
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity40(out *jwriter.Writer, in Message) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"message_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.MessageId))
	}
	{
		const prefix string = ",\"sender_id\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.SenderId))
	}
	{
		const prefix string = ",\"receiver_id\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.ReceiverId))
	}
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix)
		out.String(string(in.Text))
	}
	{
		const prefix string = ",\"status\":"
		out.RawString(prefix)
		out.String(string(in.Status))
	}
	{
		const prefix string = ",\"sent_at\":"
		out.RawString(prefix)
		out.Raw((in.SentAt).MarshalJSON())
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Message) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity40(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Message) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity40(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Message) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity40(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Message) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity40(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity41(in *jlexer.Lexer, out *GetCommentsResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "comments":
			if in.IsNull() {
				in.Skip()
				out.Comments = nil
			} else {
				in.Delim('[')
				if out.Comments == nil {
					if !in.IsDelim(']') {
						out.Comments = make([]CommentResponse, 0, 1)
					} else {
						out.Comments = []CommentResponse{}
					}
				} else {
					out.Comments = (out.Comments)[:0]
				}
				for !in.IsDelim(']') {
					var v43 CommentResponse
					(v43).UnmarshalEasyJSON(in)
					out.Comments = append(out.Comments, v43)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity41(out *jwriter.Writer, in GetCommentsResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"comments\":"
		out.RawString(prefix[1:])
		if in.Comments == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v44, v45 := range in.Comments {
				if v44 > 0 {
					out.RawByte(',')
				}
				(v45).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v GetCommentsResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity41(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v GetCommentsResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity41(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *GetCommentsResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity41(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *GetCommentsResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity41(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity42(in *jlexer.Lexer, out *FullBoard) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "board":
			(out.Board).UnmarshalEasyJSON(in)
		case "authors":
			if in.IsNull() {
				in.Skip()
				out.BoardAuthors = nil
			} else {
				in.Delim('[')
				if out.BoardAuthors == nil {
					if !in.IsDelim(']') {
						out.BoardAuthors = make([]BoardAuthor, 0, 1)
					} else {
						out.BoardAuthors = []BoardAuthor{}
					}
				} else {
					out.BoardAuthors = (out.BoardAuthors)[:0]
				}
				for !in.IsDelim(']') {
					var v46 BoardAuthor
					(v46).UnmarshalEasyJSON(in)
					out.BoardAuthors = append(out.BoardAuthors, v46)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "pins":
			if in.IsNull() {
				in.Skip()
				out.Pins = nil
			} else {
				in.Delim('[')
				if out.Pins == nil {
					if !in.IsDelim(']') {
						out.Pins = make([]BoardPinResponse, 0, 0)
					} else {
						out.Pins = []BoardPinResponse{}
					}
				} else {
					out.Pins = (out.Pins)[:0]
				}
				for !in.IsDelim(']') {
					var v47 BoardPinResponse
					(v47).UnmarshalEasyJSON(in)
					out.Pins = append(out.Pins, v47)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity42(out *jwriter.Writer, in FullBoard) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"board\":"
		out.RawString(prefix[1:])
		(in.Board).MarshalEasyJSON(out)
	}
	{
		const prefix string = ",\"authors\":"
		out.RawString(prefix)
		if in.BoardAuthors == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v48, v49 := range in.BoardAuthors {
				if v48 > 0 {
					out.RawByte(',')
				}
				(v49).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"pins\":"
		out.RawString(prefix)
		if in.Pins == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v50, v51 := range in.Pins {
				if v50 > 0 {
					out.RawByte(',')
				}
				(v51).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FullBoard) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity42(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FullBoard) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity42(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FullBoard) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity42(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FullBoard) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity42(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity43(in *jlexer.Lexer, out *FeedPins) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "pins":
			if in.IsNull() {
				in.Skip()
				out.Pins = nil
			} else {
				in.Delim('[')
				if out.Pins == nil {
					if !in.IsDelim(']') {
						out.Pins = make([]FeedPinResponse, 0, 0)
					} else {
						out.Pins = []FeedPinResponse{}
					}
				} else {
					out.Pins = (out.Pins)[:0]
				}
				for !in.IsDelim(']') {
					var v52 FeedPinResponse
					(v52).UnmarshalEasyJSON(in)
					out.Pins = append(out.Pins, v52)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity43(out *jwriter.Writer, in FeedPins) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"pins\":"
		out.RawString(prefix[1:])
		if in.Pins == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v53, v54 := range in.Pins {
				if v53 > 0 {
					out.RawByte(',')
				}
				(v54).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FeedPins) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity43(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FeedPins) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity43(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FeedPins) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity43(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FeedPins) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity43(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity44(in *jlexer.Lexer, out *FeedPinResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "pin_id":
			out.PinId = PinID(in.Uint64())
		case "content_url":
			out.ContentUrl = string(in.String())
		case "content_width":
			out.ContentDX = int64(in.Int64())
		case "content_height":
			out.ContentDY = int64(in.Int64())
		case "author":
			(out.PinAuthor).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity44(out *jwriter.Writer, in FeedPinResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"pin_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.PinId))
	}
	{
		const prefix string = ",\"content_url\":"
		out.RawString(prefix)
		out.String(string(in.ContentUrl))
	}
	{
		const prefix string = ",\"content_width\":"
		out.RawString(prefix)
		out.Int64(int64(in.ContentDX))
	}
	{
		const prefix string = ",\"content_height\":"
		out.RawString(prefix)
		out.Int64(int64(in.ContentDY))
	}
	{
		const prefix string = ",\"author\":"
		out.RawString(prefix)
		(in.PinAuthor).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v FeedPinResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity44(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v FeedPinResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity44(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *FeedPinResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity44(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *FeedPinResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity44(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity45(in *jlexer.Lexer, out *DraftResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "text":
			out.Text = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity45(out *jwriter.Writer, in DraftResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix[1:])
		out.String(string(in.Text))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v DraftResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity45(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v DraftResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity45(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *DraftResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity45(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *DraftResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity45(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity46(in *jlexer.Lexer, out *Draft) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "sender_id":
			out.SenderId = UserID(in.Uint64())
		case "receiver_id":
			out.ReceiverId = UserID(in.Uint64())
		case "text":
			out.Text = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity46(out *jwriter.Writer, in Draft) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"sender_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.SenderId))
	}
	{
		const prefix string = ",\"receiver_id\":"
		out.RawString(prefix)
		out.Uint64(uint64(in.ReceiverId))
	}
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix)
		out.String(string(in.Text))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Draft) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity46(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Draft) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity46(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Draft) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity46(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Draft) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity46(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity47(in *jlexer.Lexer, out *CommentResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "comment_id":
			out.CommentId = CommentID(in.Uint64())
		case "value":
			out.Value = string(in.String())
		case "user":
			(out.CommentAuthor).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity47(out *jwriter.Writer, in CommentResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"comment_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.CommentId))
	}
	{
		const prefix string = ",\"value\":"
		out.RawString(prefix)
		out.String(string(in.Value))
	}
	{
		const prefix string = ",\"user\":"
		out.RawString(prefix)
		(in.CommentAuthor).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CommentResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity47(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CommentResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity47(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CommentResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity47(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CommentResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity47(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity48(in *jlexer.Lexer, out *CommentRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "value":
			out.Value = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity48(out *jwriter.Writer, in CommentRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"value\":"
		out.RawString(prefix[1:])
		out.String(string(in.Value))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CommentRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity48(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CommentRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity48(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CommentRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity48(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CommentRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity48(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity49(in *jlexer.Lexer, out *CommentNotificationResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "comment_id":
			out.CommentId = int64(in.Int64())
		case "text":
			out.Text = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity49(out *jwriter.Writer, in CommentNotificationResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"comment_id\":"
		out.RawString(prefix[1:])
		out.Int64(int64(in.CommentId))
	}
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix)
		out.String(string(in.Text))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CommentNotificationResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity49(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CommentNotificationResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity49(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CommentNotificationResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity49(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CommentNotificationResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity49(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity50(in *jlexer.Lexer, out *CommentAuthor) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserId = UserID(in.Uint64())
		case "nickname":
			out.Nickname = string(in.String())
		case "avatar_url":
			out.AvatarURL = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity50(out *jwriter.Writer, in CommentAuthor) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.UserId))
	}
	{
		const prefix string = ",\"nickname\":"
		out.RawString(prefix)
		out.String(string(in.Nickname))
	}
	{
		const prefix string = ",\"avatar_url\":"
		out.RawString(prefix)
		out.String(string(in.AvatarURL))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v CommentAuthor) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity50(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v CommentAuthor) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity50(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *CommentAuthor) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity50(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *CommentAuthor) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity50(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity51(in *jlexer.Lexer, out *BoardPinResponse) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "pin_id":
			out.PinId = PinID(in.Uint64())
		case "content_url":
			out.ContentUrl = string(in.String())
		case "content_width":
			out.ContentDX = int64(in.Int64())
		case "content_height":
			out.ContentDY = int64(in.Int64())
		case "author":
			(out.PinAuthor).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity51(out *jwriter.Writer, in BoardPinResponse) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"pin_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.PinId))
	}
	{
		const prefix string = ",\"content_url\":"
		out.RawString(prefix)
		out.String(string(in.ContentUrl))
	}
	{
		const prefix string = ",\"content_width\":"
		out.RawString(prefix)
		out.Int64(int64(in.ContentDX))
	}
	{
		const prefix string = ",\"content_height\":"
		out.RawString(prefix)
		out.Int64(int64(in.ContentDY))
	}
	{
		const prefix string = ",\"author\":"
		out.RawString(prefix)
		(in.PinAuthor).MarshalEasyJSON(out)
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BoardPinResponse) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity51(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BoardPinResponse) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity51(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BoardPinResponse) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity51(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BoardPinResponse) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity51(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity52(in *jlexer.Lexer, out *BoardAuthor) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "user_id":
			out.UserId = UserID(in.Uint64())
		case "nickname":
			out.Nickname = string(in.String())
		case "avatar_url":
			out.AvatarURL = string(in.String())
		case "avatar_width":
			out.AvatarDX = int64(in.Int64())
		case "avatar_height":
			out.AvatarDY = int64(in.Int64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity52(out *jwriter.Writer, in BoardAuthor) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"user_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.UserId))
	}
	{
		const prefix string = ",\"nickname\":"
		out.RawString(prefix)
		out.String(string(in.Nickname))
	}
	{
		const prefix string = ",\"avatar_url\":"
		out.RawString(prefix)
		out.String(string(in.AvatarURL))
	}
	{
		const prefix string = ",\"avatar_width\":"
		out.RawString(prefix)
		out.Int64(int64(in.AvatarDX))
	}
	{
		const prefix string = ",\"avatar_height\":"
		out.RawString(prefix)
		out.Int64(int64(in.AvatarDY))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v BoardAuthor) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity52(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v BoardAuthor) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity52(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *BoardAuthor) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity52(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *BoardAuthor) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity52(l, v)
}
func easyjson163c17a9DecodeHarmonicaInternalEntity53(in *jlexer.Lexer, out *Board) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "board_id":
			out.BoardID = BoardID(in.Uint64())
		case "title":
			out.Title = string(in.String())
		case "created_at":
			if data := in.Raw(); in.Ok() {
				in.AddError((out.CreatedAt).UnmarshalJSON(data))
			}
		case "description":
			out.Description = string(in.String())
		case "cover_url":
			out.CoverURL = string(in.String())
		case "cover_width":
			out.CoverDX = int64(in.Int64())
		case "cover_height":
			out.CoverDY = int64(in.Int64())
		case "visibility_type":
			out.VisibilityType = VisibilityType(in.String())
		case "is_owner":
			out.IsOwner = bool(in.Bool())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson163c17a9EncodeHarmonicaInternalEntity53(out *jwriter.Writer, in Board) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"board_id\":"
		out.RawString(prefix[1:])
		out.Uint64(uint64(in.BoardID))
	}
	{
		const prefix string = ",\"title\":"
		out.RawString(prefix)
		out.String(string(in.Title))
	}
	{
		const prefix string = ",\"created_at\":"
		out.RawString(prefix)
		out.Raw((in.CreatedAt).MarshalJSON())
	}
	{
		const prefix string = ",\"description\":"
		out.RawString(prefix)
		out.String(string(in.Description))
	}
	{
		const prefix string = ",\"cover_url\":"
		out.RawString(prefix)
		out.String(string(in.CoverURL))
	}
	{
		const prefix string = ",\"cover_width\":"
		out.RawString(prefix)
		out.Int64(int64(in.CoverDX))
	}
	{
		const prefix string = ",\"cover_height\":"
		out.RawString(prefix)
		out.Int64(int64(in.CoverDY))
	}
	{
		const prefix string = ",\"visibility_type\":"
		out.RawString(prefix)
		out.String(string(in.VisibilityType))
	}
	{
		const prefix string = ",\"is_owner\":"
		out.RawString(prefix)
		out.Bool(bool(in.IsOwner))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v Board) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson163c17a9EncodeHarmonicaInternalEntity53(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v Board) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson163c17a9EncodeHarmonicaInternalEntity53(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *Board) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson163c17a9DecodeHarmonicaInternalEntity53(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *Board) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson163c17a9DecodeHarmonicaInternalEntity53(l, v)
}
